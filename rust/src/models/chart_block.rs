/*
 * BlockContent Spec
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChartBlock {
    /// type of chart
    #[serde(rename = "chart_type", skip_serializing_if = "Option::is_none")]
    pub chart_type: Option<ChartType>,
    #[serde(rename = "labels", skip_serializing_if = "Option::is_none")]
    pub labels: Option<Vec<String>>,
    #[serde(rename = "datasets", skip_serializing_if = "Option::is_none")]
    pub datasets: Option<Vec<models::ChartBlockDatasetsInner>>,
}

impl ChartBlock {
    pub fn new() -> ChartBlock {
        ChartBlock {
            chart_type: None,
            labels: None,
            datasets: None,
        }
    }
}
/// type of chart
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ChartType {
    #[serde(rename = "bar")]
    Bar,
    #[serde(rename = "line")]
    Line,
    #[serde(rename = "pie")]
    Pie,
}

impl Default for ChartType {
    fn default() -> ChartType {
        Self::Bar
    }
}

