/*
 * BlockContent Spec
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Block : A content block, used to represent structured sections such as text, charts, etc.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Block {
    /// type of block
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
    #[serde(rename = "chart_block", skip_serializing_if = "Option::is_none")]
    pub chart_block: Option<Box<models::ChartBlock>>,
    #[serde(rename = "table_block", skip_serializing_if = "Option::is_none")]
    pub table_block: Option<Box<models::TableBlock>>,
    #[serde(rename = "text_block", skip_serializing_if = "Option::is_none")]
    pub text_block: Option<Box<models::TextBlock>>,
}

impl Block {
    /// A content block, used to represent structured sections such as text, charts, etc.
    pub fn new() -> Block {
        Block {
            r#type: None,
            chart_block: None,
            table_block: None,
            text_block: None,
        }
    }
}
/// type of block
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "chart")]
    Chart,
    #[serde(rename = "table")]
    Table,
    #[serde(rename = "text")]
    Text,
}

impl Default for Type {
    fn default() -> Type {
        Self::Chart
    }
}

